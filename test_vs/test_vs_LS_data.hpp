#ifndef TEST_VS_LS_DATA_HPP
#define TEST_VS_LS_DATA_HPP

#include "python_control.hpp"

namespace LS_TestData {

using namespace PythonNumpy;
using namespace PythonControl;

constexpr std::size_t LS_NUMBER_OF_DATA = 20;
constexpr std::size_t X_SIZE = 2;
constexpr std::size_t Y_SIZE = 1;

Matrix<DefDense, double, LS_NUMBER_OF_DATA, X_SIZE> LS_test_X(
    {{3.74540119, 6.11852895},
     {9.50714306, 1.39493861},
     {7.31993942, 2.92144649},
     {5.98658484, 3.66361843},
     {1.5601864,  4.56069984},
     {1.5599452,  7.85175961},
     {0.58083612, 1.99673782},
     {8.66176146, 5.14234438},
     {6.01115012, 5.92414569},
     {7.08072578, 0.46450413},
     {0.20584494, 6.07544852},
     {9.69909852, 1.70524124},
     {8.32442641, 0.65051593},
     {2.12339111, 9.48885537},
     {1.81824967, 9.65632033},
     {1.8340451, 8.08397348},
     {3.04242243, 3.04613769},
     {5.24756432, 0.97672114},
     {4.31945019, 6.84233027},
     {2.9122914, 4.40152494}
});

Matrix<DefDense, double, LS_NUMBER_OF_DATA, Y_SIZE> LS_test_Y({
    {1.02314365},
    {13.4341866},
    {8.95097739},
    {6.33677408},
    {-1.00619163},
    {-3.66108659},
    {-0.43941794},
    {9.18073529},
    {4.58479329},
    {10.55119905},
    {-4.25274788},
    {13.48144376},
    {12.25144165},
    {-4.11319608},
    {-4.70228814},
    {-3.40553991},
    {2.43015967},
    {7.37233916},
    {1.30855191},
    {1.14336633}
});


} // namespace LS_TestData

#endif // TEST_VS_LS_DATA_HPP
